@using Syncfusion.EJ2

@{
    var dataManager = new DataManager()
    {
        Url = "../api/RequestCalendar/GetData",
        Adaptor = "UrlAdaptor",
        CrudUrl = "../api/RequestCalendar/UpdateData",
        CrossDomain = true
    };

}
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title text-primary"><i class="fa fa-certificate"></i> Scheduler</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div id="schedule"></div>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">

            </div>
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>

<ejs-schedule id="schedule" width="100%" height="550" popUpOpen="onPopupOpen" showQuickInfo="false" selectedDate=DateTime.Now>
    <e-schedule-views>
        <e-schedule-view option="Day"></e-schedule-view>
        <e-schedule-view option="Week"></e-schedule-view>
        <e-schedule-view option="WorkWeek"></e-schedule-view>
        <e-schedule-view option="Month"></e-schedule-view>
    </e-schedule-views>
    <e-schedule-eventsettings dataSource="dataManager">
        <e-eventsettings-fields id="RequestId">
            <e-field-subject name="RequesterEmail"></e-field-subject>
            <e-field-description name="SpecialDetails"></e-field-description>
            <e-field-location name="LaboratoryName" title="Laboratory" id="LaboratoryId"></e-field-location>
            <e-field-starttime name="Start" title="OrderDate"></e-field-starttime>
            <e-field-endtime name="End" title="Due Date"></e-field-endtime>

        </e-eventsettings-fields>
    </e-schedule-eventsettings>

</ejs-schedule>
<style>
    .custom-event-editor .e-textlabel {
        padding-right: 15px;
        text-align: right;
    }

    .custom-event-editor td {
        padding: 7px;
        padding-right: 16px;
    }
</style>
<script id="EventEditorTemplate" type="text/template">
    <table class="custom-event-editor" width="100%" cellpadding="5">
        <tbody>
            <tr>
                <td class="e-textlabel">RequesterEmail</td>
                <td colspan="4">
                    <input id="RequesterEmail" type="text" class="e-field" value="" name="RequesterEmail" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">FilterType</td>
                <td colspan="4">
                    <input type="text" id="FilterID" name="FilterType" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">FilterSize</td>
                <td colspan="4">
                    <input type="text" id="SizeID" name="FilterSize" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">ControllerType</td>
                <td colspan="4">
                    <input type="text" id="ControllerID" name="ControllerType" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Laboratory</td>
                <td colspan="4">
                    <input type="text" id="LaboratoryId" class="e-field" name="LaboratoryName" style="width: 100%" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">From</td>
                <td colspan="4">
                    <input id="Start" class="e-field" type="text" name="Start" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">To</td>
                <td colspan="4">
                    <input id="End" class="e-field" type="text" name="End" />
                </td>
            </tr>
            <tr>
                <td class="e-textlabel">Special Details</td>
                <td colspan="4">
                    <textarea id="SpecialDetails" class="e-field e-input" name="SpecialDetails" rows="3" cols="50" style="width: 100%; height: 60px !important; resize: vertical"></textarea>
                </td>
            </tr>
        </tbody>
    </table>
</script>

<script type="text/javascript">
    function onPopupOpen(args) {
        if (args.type === 'Editor') {
            
            var dataManager = ej.DataManager({
                url: "/api/RequestCalendar",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });

            var dataManagerFilterType = ej.DataManager({
                url: "/api/FilterType",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerFilterSize = ej.DataManager({
                url: "/api/FilterSize",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerControllerType = ej.DataManager({
                url: "/api/ControllerType",
                adaptor: new ej.WebApiAdaptor()
            });
            var dataManagerLaboratory = ej.DataManager({
                url: "/api/Laboratory",
                adaptor: new ej.WebApiAdaptor()
            });
           
            var dataManagerState  = ej.DataManager({
                url: "/api/Requeststate",
                adaptor: new ej.WebApiAdaptor()
            });


            var filterElement = args.element.querySelector('#FilterID');
            if (!filterElement.classList.contains('e-dropdownlist')) {
                var dropDownListObject = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Filter Type', value: filterElement.value,
                    dataSource: dataManagerFilterType
                });
                dropDownListObject.appendTo(filterElement);
                filterElement.setAttribute('FilterID', 'FilterType');
            }
                var sizeElement = args.element.querySelector('#SizeID');
            if (!sizeElement.classList.contains('e-dropdownlist')) {
                var dropDownListObject = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Filter Size', value: sizeElement.value,
                    dataSource: dataManagerFilterSize
                });
                dropDownListObject.appendTo(sizeElement);
                sizeElement.setAttribute('SizeID', 'filterSize');
            }
                var controllerElement = args.element.querySelector('#ControllerID');
            if (!controllerElement.classList.contains('e-dropdownlist')) {
                var dropDownListObject = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Controller Type', value: controllerElement.value,
                    dataSource: dataManagerControllerType
                });
                dropDownListObject.appendTo(controllerElement);
                controllerElement.setAttribute('ControllerID', 'controllerType');
            }
                var labElement = args.element.querySelector('#LaboratoryId');
            if (!labElement.classList.contains('e-dropdownlist')) {
                var dropDownListObject = new ej.dropdowns.DropDownList({
                    placeholder: 'Choose Lab', value: labElement.value,
                    dataSource: dataManagerLaboratory
                });
                dropDownListObject.appendTo(labElement);
                filterElement.setAttribute('LaboratoryId', 'LaboratoryName');
            }
            var startElement = args.element.querySelector('#Start');
            if (!startElement.classList.contains('e-datetimepicker')) {
                new ej.calendars.DateTimePicker({ value: new Date(startElement.value) || new Date() }, startElement);
            }
            var endElement = args.element.querySelector('#End');
            if (!endElement.classList.contains('e-datetimepicker')) {
                new ej.calendars.DateTimePicker({ value: new Date(endElement.value) || new Date() }, endElement);
            }
        }
    }
</script>