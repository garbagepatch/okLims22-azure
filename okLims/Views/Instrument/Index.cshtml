@{ ViewData["Title"] = "Instrument";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title text-primary"><i class="fa fa-gear"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div id="Grid"></div>
            </div>
            <!-- /.box-body -->
            <div class="box-footer">

            </div>
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
-eventsettings>

@section Scripts{

    <script type="text/javascript">
        $(function () {
            var dataManager = ej.DataManager({
                url: "/api/Instrument",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });
            var dataManagerType = ej.DataManager({
                url: "/api/InstrumentType",
                adaptor: new ej.WebApiAdaptor()

            });
            dataManager.ready.done(function (e) {
                $("#Grid").ejGrid({
                    dataSource: ej.DataManager({
                        json: e.result,
                        adaptor: new ej.remoteSaveAdaptor(),
                        insertUrl: "/api/Instrument/Insert",
                        updateUrl: "/api/Instrument/Update",
                        removeUrl: "/api/Instrument/Remove",
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel", "search", "printGrid"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        showDeleteConfirmDialog: true,
                        editMode: "dialog"
                    },
                    isResponsive: true,
                    enableResponsiveRow: true,
                    allowSorting: true,
                    allowSearching: true,
                    allowFiltering: true,
                    filterSettings: {
                        filterType: "excel",
                        maxFilterChoices: 100,
                        enableCaseSensitivity: false
                    },
                    allowPaging: true,
                    pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.CurrentPage },
                    columns: [
                        { field: "InstrumentId", headerText: 'Instrument Id', isPrimaryKey: true, isIdentity: true, visible: false },
                        { field: "InstrumentTypeId", headerText: 'Instrument Type', dataSource: dataManagerType, foreignKeyField: "InstrumentTypeId", foreignKeyValue: "instrumentType", editType: 'dropdownedit' },
                        { field: "InstrumentName", headerText: 'Instrument Name' },
                        { field: "CalibrationDate", headerText: 'Calibration Date', editType: "datepicker", allowEditing: true, },

                        { field: "CalibrationDue", headerText: 'Calibration Due', allowEditing: true, editType: 'datepicker' },
                        { field: "MaintenanceDate", headerText: 'Maintenance Date', editType: "datepicker", allowEditing: true },

                        { field: "MaintenanceDue", headerText: 'Maintenance Due', allowEditing: true, editType: 'datepicker' },

                    ],
                    actionComplete: "complete",


                });
            });
        });

        function complete(args) {
            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });


            }
        }





    </script>
}